{"version":3,"sources":["Creator.js","TrackerItem/TrackerItem.js","Trackers.js","redux/tracker-reducer.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Creator","props","useForm","register","handleSubmit","generateID","reset","firstPart","Math","random","secondPart","toString","slice","useEffect","restoreState","onSubmit","data","e","newTracker","id","name","moment","format","savedTime","running","simpleTimer","addTimer","target","ref","placeholder","type","TrackerItem","setTimeout","stepTimer","saveState","seconds","display","hh","mm","ss","parseInt","onClick","setRun","deleteTimer","Trackers","React","timers","map","el","index","reverse","initalState","newState","trackerReducer","state","action","timer","newObj","filter","currentTimerObj","nextCurrentTimerObj","newTimers","difference","diff","bool","AppWrapper","connect","numberOfTimers","console","log","dispatch","getState","window","localStorage","setItem","JSON","stringify","restoredState","parse","getItem","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10885f91.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nconst Creator = (props) => {\r\n \r\n    const { register, handleSubmit, reset } = useForm();\r\n\r\n    const generateID = () => {\r\n        var firstPart = (Math.random() * 46656) | 0;\r\n        var secondPart = (Math.random() * 46656) | 0;\r\n        firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\r\n        secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\r\n        return firstPart + secondPart;\r\n    }\r\n  \r\n\r\n    const onSubmit = (data, e) => {\r\n        const newTracker = {\r\n            id: generateID(),\r\n            name: data['tracker-name'] || moment().format(),\r\n            savedTime: moment(),\r\n            running: true,\r\n            simpleTimer: 1\r\n        }\r\n        \r\n        props.addTimer(newTracker)     \r\n        e.target.reset()   \r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        props.restoreState()\r\n    },[])\r\n   \r\n   \r\n   \r\n    return (\r\n        <div>\r\n            <h1>tracker</h1>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <input name=\"tracker-name\"  ref={register} placeholder='Enter tracker name' />\r\n                <input type=\"submit\" />\r\n\r\n            </form>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Creator","import React, {useState, useEffect} from 'react'\r\nimport moment from 'moment';\r\n\r\nconst TrackerItem = (props) => {\r\n \r\n    //debugger\r\n\r\n    const remove = () => {\r\n        props.deleteTimer(props.id)\r\n       \r\n    }\r\n\r\n    const stop = () => {\r\n        props.setRun(false, props.id)\r\n    }\r\n\r\n    const start = () => {\r\n        props.setRun(true, props.id)\r\n        \r\n    }\r\n\r\n\r\n\r\n    const timerEngine = () => {\r\n        //debugger\r\n        props.stepTimer(props.id)\r\n        props.saveState()\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        //console.log('useeffect')\r\n        if (props.running) {\r\n            const interval = setTimeout(() => timerEngine(), 1000)\r\n        }\r\n                \r\n                 \r\n    }, [props.running, props.simpleTimer])\r\n\r\n\r\n    const display = () => {\r\n\r\n        const seconds = props.simpleTimer\r\n\r\n        let display = {\r\n            hh : 0,\r\n            mm : 0,\r\n            ss : 0\r\n        }\r\n\r\n        if (seconds > 0) {\r\n            if (seconds < 60) {\r\n                display.ss = seconds\r\n            } else if (seconds % 60 === 0) {\r\n                 display.mm = seconds / 60 \r\n            } else {\r\n                display.mm = parseInt(seconds/60)\r\n                display.ss = seconds % 60\r\n            }\r\n        }\r\n\r\n        if (display.mm > 59) {\r\n            if (display.mm % 60 === 0) {\r\n                display.hh = display.mm /60\r\n                display.mm = 0\r\n            } else {\r\n                display.hh = parseInt(display.mm/60)\r\n                display.mm = display.mm % 60\r\n            }\r\n        }\r\n\r\n        const output = \r\n        <p>\r\n        {display.hh < 1 ? '00' : display.hh < 10 ? '0' + display.hh : display.hh}\r\n        :{display.mm < 1 ? '00' : display.mm < 10 ? '0' + display.mm : display.mm}\r\n        :{display.ss < 10 ? '0' + display.ss : display.ss}\r\n        </p>\r\n\r\n\r\n\r\n\r\n\r\n        return output\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>{props.name}</h3>\r\n            {display()}\r\n            \r\n            <button onClick={() => {stop()}}>stop</button>\r\n            <button onClick={() => {start()}}>start</button>\r\n            <button onClick={() => {remove()}}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TrackerItem","import React, {useState, useEffect} from 'react'\r\nimport TrackerItem from './TrackerItem/TrackerItem'\r\n\r\n\r\n\r\nconst Trackers = (props) => {\r\n \r\n    React.useEffect(() => {\r\n        //debugger\r\n    }, [props.timers])\r\n\r\n    const listGenerator = () => {\r\n\r\n        const list = props.timers.map((el, index) => <TrackerItem \r\n        key = {el.id}\r\n        index = {index}\r\n        id = {el.id}\r\n        name = {el.name}\r\n        running = {el.running}\r\n        savedTime = {el.savedTime}\r\n        simpleTimer = {el.simpleTimer}\r\n        stepTimer = {props.stepTimer}\r\n        saveState = {props.saveState}\r\n        deleteTimer = {props.deleteTimer}\r\n        setRun = {props.setRun}\r\n        \r\n     />)\r\n\r\n\r\n        const reversedList = list.slice(0).reverse()\r\n        \r\n        return reversedList\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n           {listGenerator()}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport  default Trackers","import moment from 'moment';\r\n\r\nconst initalState = {\r\n    \r\n    timers: []\r\n\r\n    \r\n}\r\n\r\nconst trackerReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-TIMER':\r\n            return ({\r\n                ...state,\r\n                timers: [...state.timers, action.timer]\r\n            })\r\n\r\n        case 'STEP':\r\n            \r\n            {\r\n            let newObj = state.timers.filter((el) => {\r\n                if (el.id === action.id) {\r\n                    return el\r\n                }\r\n            })  \r\n            \r\n            let currentTimerObj = newObj[0]\r\n            \r\n\r\n            if (currentTimerObj) {\r\n                const savedTime = moment()\r\n                const simpleTimer = currentTimerObj.simpleTimer + 1\r\n                const nextCurrentTimerObj = {\r\n                    ...currentTimerObj,\r\n                    savedTime,\r\n                    simpleTimer\r\n                }\r\n    \r\n                const newTimers = state.timers.map((el) => {\r\n                    if (el.id == action.id) {\r\n                        return nextCurrentTimerObj\r\n                    } else {\r\n                        return el\r\n                    }\r\n                })\r\n\r\n                return ({\r\n                    ...state,\r\n                    timers: newTimers\r\n                })\r\n\r\n                \r\n            }\r\n\r\n            return ({\r\n                ...state\r\n            })\r\n            \r\n        \r\n        }\r\n\r\n\r\n        case 'RESTORE':\r\n            {\r\n                const newTimers = action.newState.timers.map((el) => {\r\n                    const difference =  moment().diff(el.savedTime, 'seconds')\r\n                    el.simpleTimer += difference\r\n                    return el\r\n                })\r\n\r\n                //debugger    \r\n\r\n\r\n                return ({\r\n                    ...state,\r\n                    timers: newTimers\r\n                })\r\n            }\r\n    \r\n\r\n\r\n\r\n            \r\n\r\n\r\n        case 'DELETE': \r\n            {\r\n                \r\n            const newTimers = state.timers.filter((el) => {\r\n                if (el.id !== action.id) {\r\n                    return el\r\n                }\r\n            })\r\n\r\n                       \r\n            return ({\r\n                ...state,\r\n                timers: newTimers\r\n                \r\n            })\r\n        }\r\n\r\n\r\n        case 'SET-RUN':\r\n            {\r\n                const newTimers = state.timers.map((el) => {\r\n                    if (el.id === action.id) {\r\n                        el.running = action.bool\r\n                        return el\r\n                    } else {\r\n                        return el\r\n                    }\r\n                })\r\n\r\n                return ({\r\n                    ...state,\r\n                    timers: newTimers\r\n                })\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n      \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addTimer = (timer) => ({type: 'ADD-TIMER', timer})\r\nexport const stepTimer = (id) => ({type: 'STEP', id})\r\nexport const restoreState = (newState) => ({type: 'RESTORE', newState})\r\nexport const deleteTimer = (id) => ({type: 'DELETE', id})\r\nexport const setRunning = (bool, id) => ({type: 'SET-RUN', bool, id})\r\n\r\n\r\n\r\n\r\nexport const saveStateToStorageThunkCreator = () => {\r\n    console.log('State saved')\r\n    return (dispatch, getState) => {\r\n        \r\n       (window.localStorage.setItem('state', JSON.stringify(getState())))\r\n      \r\n    }\r\n}\r\n\r\nexport const getStateFromStorageThunkCreator = () => {\r\n\r\n    console.log('State restored')    \r\n    return ((dispatch) => {\r\n        \r\n        const restoredState = JSON.parse(window.localStorage.getItem('state'))\r\n\r\n        \r\n\r\n        \r\n        if (!restoredState) {\r\n            dispatch(restoreState(initalState))\r\n        } else {\r\n            dispatch(restoreState(restoredState))\r\n        }\r\n        \r\n        \r\n     \r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default trackerReducer\r\n\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport Creator from './Creator'\nimport Trackers from './Trackers';\nimport { connect } from 'react-redux';\nimport {addTimer, stepTimer, saveStateToStorageThunkCreator, getStateFromStorageThunkCreator, deleteTimer, setRunning } from './redux/tracker-reducer';\n\n\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n\n        <Creator {...props} />\n        <Trackers {...props} />\n        \n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    timers: state.timers,\n    numberOfTimers: state.numberOfTimers\n  }\n}\n\nconst AppWrapper = connect(mapStateToProps, {\n  addTimer,\n  stepTimer,\n  saveState: saveStateToStorageThunkCreator,\n  restoreState: getStateFromStorageThunkCreator,\n  deleteTimer,\n  setRun: setRunning\n})(App)\n\n\n\n\n\n\n\nexport default AppWrapper;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, compose, applyMiddleware} from \"redux\";\r\nimport trackerReducer from \"./tracker-reducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(trackerReducer, composeEnhancers(applyMiddleware(thunk)))\r\n    \r\n\r\n\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWrapper from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppWrapper />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nwindow.store = store\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}