{"version":3,"sources":["svg/add_circle-24px.svg","Creator.js","svg/play_arrow-24px.svg","svg/pause-24px.svg","svg/remove_circle_outline-24px.svg","TrackerItem/TrackerItem.js","Trackers.js","redux/tracker-reducer.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Creator","props","useForm","register","handleSubmit","generateID","reset","firstPart","Math","random","secondPart","toString","slice","useEffect","restoreState","onSubmit","data","e","newTracker","id","name","moment","format","savedTime","running","simpleTimer","addTimer","target","Input","inputRef","ref","placeholder","Button","type","src","addIcon","alt","TrackerItem","setTimeout","stepTimer","saveState","className","seconds","display","hh","mm","ss","parseInt","onClick","setRun","pauseIcon","playIcon","deleteTimer","removeIcon","Trackers","React","timers","map","el","index","reverse","initalState","newState","trackerReducer","state","action","timer","newObj","filter","currentTimerObj","nextCurrentTimerObj","newTimers","difference","diff","bool","AppWrapper","connect","numberOfTimers","dispatch","getState","window","localStorage","setItem","JSON","stringify","restoredState","parse","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cae2788.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add_circle-24px.b7bb9a46.svg\";","import React, { useEffect } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport moment from 'moment';\r\nimport './Creator.css';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport addIcon from './svg/add_circle-24px.svg'\r\n\r\n\r\nconst Creator = (props) => {\r\n\r\n    const { register, handleSubmit, reset } = useForm();\r\n\r\n    const generateID = () => {\r\n        var firstPart = (Math.random() * 46656) | 0;\r\n        var secondPart = (Math.random() * 46656) | 0;\r\n        firstPart = (\"000\" + firstPart.toString(36)).slice(-3);\r\n        secondPart = (\"000\" + secondPart.toString(36)).slice(-3);\r\n        return firstPart + secondPart;\r\n    }\r\n\r\n\r\n    const onSubmit = (data, e) => {\r\n\r\n        const newTracker = {\r\n            id: generateID(),\r\n            name: data['tracker-name'] || moment().format(\"dddd, MMMM Do YYYY, h:mm:ss a\"),\r\n            savedTime: moment(),\r\n            running: true,\r\n            simpleTimer: 1\r\n        }\r\n\r\n        props.addTimer(newTracker)\r\n        e.target.reset()\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        props.restoreState()\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>tracker</h1>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <Input inputRef={register} name=\"tracker-name\" ref={register} placeholder='Enter tracker name' />\r\n\r\n                <Button type=\"submit\"><img src={addIcon} alt='add icon'></img> </Button>\r\n\r\n\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Creator","export default __webpack_public_path__ + \"static/media/play_arrow-24px.f303159b.svg\";","export default __webpack_public_path__ + \"static/media/pause-24px.e3fdb852.svg\";","export default __webpack_public_path__ + \"static/media/remove_circle_outline-24px.594713c1.svg\";","import React, { useEffect } from 'react'\r\nimport playIcon from './../svg/play_arrow-24px.svg'\r\nimport pauseIcon from './../svg/pause-24px.svg'\r\nimport removeIcon from './../svg/remove_circle_outline-24px.svg'\r\nimport './TrackerItem.css'\r\n\r\nconst TrackerItem = (props) => {\r\n\r\n    const remove = () => {\r\n        props.deleteTimer(props.id)\r\n    }\r\n\r\n    const stop = () => {\r\n        props.setRun(false, props.id)\r\n    }\r\n\r\n    const start = () => {\r\n        props.setRun(true, props.id)\r\n    }\r\n\r\n\r\n\r\n    const timerEngine = () => {\r\n        props.stepTimer(props.id)\r\n        props.saveState()\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.running) {\r\n            const interval = setTimeout(() => timerEngine(), 1000)\r\n        }\r\n    }, [props.running, props.simpleTimer])\r\n\r\n\r\n    const display = () => {\r\n\r\n        const seconds = props.simpleTimer\r\n\r\n        let display = {\r\n            hh: 0,\r\n            mm: 0,\r\n            ss: 0\r\n        }\r\n\r\n        if (seconds > 0) {\r\n            if (seconds < 60) {\r\n                display.ss = seconds\r\n            } else if (seconds % 60 === 0) {\r\n                display.mm = seconds / 60\r\n            } else {\r\n                display.mm = parseInt(seconds / 60)\r\n                display.ss = seconds % 60\r\n            }\r\n        }\r\n\r\n        if (display.mm > 59) {\r\n            if (display.mm % 60 === 0) {\r\n                display.hh = display.mm / 60\r\n                display.mm = 0\r\n            } else {\r\n                display.hh = parseInt(display.mm / 60)\r\n                display.mm = display.mm % 60\r\n            }\r\n        }\r\n\r\n        const output =\r\n            <>\r\n                {display.hh < 1 ? '00' : display.hh < 10 ? '0' + display.hh : display.hh}\r\n        :{display.mm < 1 ? '00' : display.mm < 10 ? '0' + display.mm : display.mm}\r\n        :{display.ss < 10 ? '0' + display.ss : display.ss}\r\n            </>\r\n\r\n\r\n\r\n\r\n\r\n        return output\r\n    }\r\n\r\n    const displayStyleSwitcher = () => {\r\n        if (props.running) {\r\n            return 'timer active'\r\n        } else {\r\n            return 'timer paused'\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='item-contaner'>\r\n\r\n            <div className='tracker-name'>{props.name}</div>\r\n\r\n            <div className={displayStyleSwitcher()}>{display()}</div>\r\n\r\n            <div className='buttons'>\r\n                {props.running\r\n                    ? <button onClick={() => { stop() }}><img src={pauseIcon} alt='pause icon'></img></button>\r\n                    : <button onClick={() => { start() }}><img src={playIcon} alt='play icon'></img></button>}\r\n                <button onClick={() => { remove() }}><img src={removeIcon} alt='remove icon'></img></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TrackerItem","import React from 'react'\r\nimport TrackerItem from './TrackerItem/TrackerItem'\r\n\r\n\r\n\r\nconst Trackers = (props) => {\r\n\r\n    React.useEffect(() => {\r\n        //debugger\r\n    }, [props.timers])\r\n\r\n    const listGenerator = () => {\r\n\r\n        const list = props.timers.map((el, index) => <TrackerItem\r\n            key={el.id}\r\n            index={index}\r\n            id={el.id}\r\n            name={el.name}\r\n            running={el.running}\r\n            savedTime={el.savedTime}\r\n            simpleTimer={el.simpleTimer}\r\n            stepTimer={props.stepTimer}\r\n            saveState={props.saveState}\r\n            deleteTimer={props.deleteTimer}\r\n            setRun={props.setRun}\r\n\r\n        />)\r\n\r\n\r\n        const reversedList = list.slice(0).reverse()\r\n\r\n        return reversedList\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {listGenerator()}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Trackers","import moment from 'moment';\r\n\r\nconst initalState = {\r\n    timers: []\r\n}\r\n\r\nconst trackerReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-TIMER':\r\n            return ({\r\n                ...state,\r\n                timers: [...state.timers, action.timer]\r\n            })\r\n\r\n        case 'STEP':\r\n\r\n            {\r\n                let newObj = state.timers.filter((el) => {\r\n                    if (el.id === action.id) {\r\n                        return el\r\n                    }\r\n                })\r\n\r\n                let currentTimerObj = newObj[0]\r\n\r\n\r\n                if (currentTimerObj) {\r\n                    const savedTime = moment()\r\n                    const simpleTimer = currentTimerObj.simpleTimer + 1\r\n                    const nextCurrentTimerObj = {\r\n                        ...currentTimerObj,\r\n                        savedTime,\r\n                        simpleTimer\r\n                    }\r\n\r\n                    const newTimers = state.timers.map((el) => {\r\n                        if (el.id == action.id) {\r\n                            return nextCurrentTimerObj\r\n                        } else {\r\n                            return el\r\n                        }\r\n                    })\r\n\r\n                    return ({\r\n                        ...state,\r\n                        timers: newTimers\r\n                    })\r\n\r\n\r\n                }\r\n\r\n                return ({\r\n                    ...state\r\n                })\r\n\r\n\r\n            }\r\n\r\n\r\n        case 'RESTORE':\r\n            {\r\n                const newTimers = action.newState.timers.map((el) => {\r\n                    if (el.running) {\r\n                        const difference = moment().diff(el.savedTime, 'seconds')\r\n                        el.simpleTimer += difference\r\n                        return el\r\n                    } else {\r\n                        return el\r\n                    }\r\n\r\n                })\r\n\r\n\r\n                return ({\r\n                    ...state,\r\n                    timers: newTimers\r\n                })\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        case 'DELETE':\r\n            {\r\n\r\n                const newTimers = state.timers.filter((el) => {\r\n                    if (el.id !== action.id) {\r\n                        return el\r\n                    }\r\n                })\r\n\r\n\r\n                return ({\r\n                    ...state,\r\n                    timers: newTimers\r\n\r\n                })\r\n            }\r\n\r\n\r\n        case 'SET-RUN':\r\n            {\r\n                const newTimers = state.timers.map((el) => {\r\n                    if (el.id === action.id) {\r\n                        el.running = action.bool\r\n                        return el\r\n                    } else {\r\n                        return el\r\n                    }\r\n                })\r\n\r\n                return ({\r\n                    ...state,\r\n                    timers: newTimers\r\n                })\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addTimer = (timer) => ({ type: 'ADD-TIMER', timer })\r\nexport const stepTimer = (id) => ({ type: 'STEP', id })\r\nexport const restoreState = (newState) => ({ type: 'RESTORE', newState })\r\nexport const deleteTimer = (id) => ({ type: 'DELETE', id })\r\nexport const setRunning = (bool, id) => ({ type: 'SET-RUN', bool, id })\r\n\r\n\r\n\r\n\r\nexport const saveStateToStorageThunkCreator = () => {\r\n    //console.log('State saved')\r\n    return (dispatch, getState) => {\r\n\r\n        (window.localStorage.setItem('state', JSON.stringify(getState())))\r\n\r\n    }\r\n}\r\n\r\nexport const getStateFromStorageThunkCreator = () => {\r\n\r\n    //console.log('State restored')\r\n    return ((dispatch) => {\r\n\r\n        const restoredState = JSON.parse(window.localStorage.getItem('state'))\r\n\r\n\r\n\r\n\r\n        if (!restoredState) {\r\n            dispatch(restoreState(initalState))\r\n        } else {\r\n            dispatch(restoreState(restoredState))\r\n        }\r\n\r\n\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default trackerReducer\r\n\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport Creator from './Creator'\nimport Trackers from './Trackers';\nimport { connect } from 'react-redux';\nimport { addTimer, stepTimer, saveStateToStorageThunkCreator, getStateFromStorageThunkCreator, deleteTimer, setRunning } from './redux/tracker-reducer';\n\n\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n\n      <Creator {...props} />\n      <Trackers {...props} />\n\n    </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    timers: state.timers,\n    numberOfTimers: state.numberOfTimers\n  }\n}\n\nconst AppWrapper = connect(mapStateToProps, {\n  addTimer,\n  stepTimer,\n  saveState: saveStateToStorageThunkCreator,\n  restoreState: getStateFromStorageThunkCreator,\n  deleteTimer,\n  setRun: setRunning\n})(App)\n\n\n\n\n\n\n\nexport default AppWrapper;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, compose, applyMiddleware} from \"redux\";\r\nimport trackerReducer from \"./tracker-reducer\";\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(trackerReducer, composeEnhancers(applyMiddleware(thunk)))\r\n    \r\n\r\n\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWrapper from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppWrapper />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nwindow.store = store\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}